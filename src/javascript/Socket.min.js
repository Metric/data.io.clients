var Socket=function(){this.ws=null,this.init.apply(this,arguments)};Socket.prototype=Object.create(EventEmitter.prototype),Socket.prototype.init=function(t){var e=this;return this.ws=t,this.connected=!1,this.ws&&(this.ws.onmessage=function(t){e._handleMessage(t.data)},this.ws.onclose=function(t){e.connected=!1,e._broadcast("close",t),e.ws=null},this.ws.onerror=function(t){e.connected=!1,e._broadcast("error",t),e.ws=null},this.ws.onopen=function(){e.connected=!0,e._broadcast("connect")}),this},Socket.prototype._handleMessage=function(t){if("string"==typeof t){var e=JSON.parse(t);e.name&&"string"==typeof e.name&&e.data&&Array.isArray(e.data)?this._broadcast(e.name,e.data):this._broadcast("error",new Error("Invalid Packet: "+t))}return this},Socket.prototype._broadcast=function(t,e){var n=[t];return n=n.concat(e),this._emit.apply(this,n),this},Socket.prototype.close=function(){return this.ws&&this.ws.close(),this},Socket.prototype.connect=function(){!this.ws&&this.uri&&this.init(new ws(this.uri))},Socket.prototype._emit=Socket.prototype.emit,Socket.prototype.emit=function(t){var e=[];arguments.length>1&&(e=Array.prototype.slice.call(arguments,1,arguments.length));var n={name:t,data:e};return this.ws&&this.connected&&this.ws.send(JSON.stringify(n)),this};