var Socket=function(){this.ws=null,this.emitter=new EventEmitter,this.init.apply(this,arguments)};Socket.prototype.init=function(t){var e=this;return this.ws=t,this.connected=!1,this.ws&&(this.ws.onmessage=function(t){e.handleMessage(t.data)},this.ws.onclose=function(t){e.connected=!1,e.broadcast("close",t)},this.ws.onerror=function(t){e.connected=!1,e.broadcast("error",t)},this.ws.onopen=function(){e.connected=!0,e.broadcast("connect")}),this},Socket.prototype.handleMessage=function(t){if("string"==typeof t){var e=JSON.parse(t);this.broadcast(e.name,e.data)}return this},Socket.prototype.broadcast=function(t,e){var n=[t];return n=n.concat(e),this.emitter.emit.apply(this.emitter,n),this},Socket.prototype.on=function(t,e){return this.emitter.on(t,e),this},Socket.prototype.once=function(t,e){return this.emitter.once(t,e),this},Socket.prototype.close=function(){return this.ws&&this.ws.close(),this},Socket.prototype.emit=function(t){var e=[];arguments.length>1&&(e=Array.prototype.slice.call(arguments,1,arguments.length));var n={name:t,data:e};return this.ws&&this.ws.send(JSON.stringify(n)),this};